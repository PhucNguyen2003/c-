ex1:

#include <iostream>
#include <string>
#include <ctime>
#include <cstdlib>

using namespace std;

int main(){
    enum field {WORD, HINT, NUM_FIELD};
    const int NUM_WORDS = 5;
    const string WORDS[NUM_WORDS][NUM_FIELD] = {
        {"wall", "Do you feel you're banging your head against something?"},
        {"glasses", "These might help you see the answer."},
        {"labored", "Going slowly, is it?"},
        {"persistent", "Keep at it."},
        {"jumble", "It's what the game all about"}
    };
    
    int score = 150;

    enum difficulty {EASY, NORMAL, HARD, NUM_DIFF_LEVELS};
    cout << "There are " << NUM_DIFF_LEVELS << " difficulty levels.";

    srand(static_cast<unsigned int>(time(0)));
    int choice = (rand() % NUM_WORDS);
    string theWord = WORDS[choice][WORD];
    string theHint = WORDS[choice][HINT];

    string jumble = theWord;    //jumbled version of word
    int length = jumble.size();
    for(int i = 0; i < length; i++){
        int index1 = (rand() % length);
        int index2 = (rand() % length);
        char temp = jumble[index1];
        jumble[index1] = jumble[index2];
        jumble[index2] = temp;
    }

    cout << "\t\t\tWelcome to Word Jumble!\n\n";
    cout << "Unscramble the letters  to make a word.\n";
    cout << "Enter 'hint' for a hint.\n";
    cout << "Enter 'quit' to quit the game.\n\n";
    cout << "The jumble is: " << jumble;

    string guess;
    cout << "\n\nEnter your guess: ";
    cin >> guess;

    while(guess != theWord && guess != "quit")
    {
        if(guess == "hint")
        {
            cout << theHint;
            score -= 30;
        }
        else
        {
            cout << "Sorry, that's not it.";
            score--;
        }

        cout << "\nEnter your guess: ";
        cin >> guess;
    }

    if(guess == theWord)
    {
        cout << "\nThat's it! You guessed it!\n";
        cout << "Your score: " << score << endl;
    }

    cout << "Thanks for playing.\n";

    return 0; 
}

ex2:
    - The last loop has i as the number of character of phrase.
    However, there is no position in phrase that is i possible

ex3:
    - the index for rows is only 2, however the initial value has 3 character.
    - this column and row need to be swapped in order to work.